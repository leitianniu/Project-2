import java.awt.*;
import java.awt.event.*;

import javax.swing.*;




@SuppressWarnings("serial")

public class mineGUI extends JFrame implements ActionListener{
	
	private button mineButtons[] = new button[100];	
	private GridLayout mineBoard, infoBoard;
	private Container boardContainer;
	private JMenuBar topMenu;
	private JMenu gameMenu,hMenu;
	private JMenuItem gReset, gTopTen, gExit, hHelp, hAbout;

	
	public mineGUI(){
		
		super("Minesweeper");
		setSize(400,400);
		
		
		
		topMenu = new JMenuBar();
		setJMenuBar(topMenu);
		
		gameMenu = new JMenu("Game");
		topMenu.add(gameMenu);
		
		gReset = new JMenuItem("Reset");
		gameMenu.add(gReset);
		gReset.setMnemonic(KeyEvent.VK_R);
		gReset.setAccelerator(KeyStroke.getKeyStroke(
                KeyEvent.VK_R, ActionEvent.ALT_MASK));
		gReset.addActionListener(this);
		gameMenu.addSeparator();
		
		gTopTen = new JMenuItem("Top Ten");
		gameMenu.add(gTopTen);
		gTopTen.setMnemonic(KeyEvent.VK_T);
		gTopTen.setAccelerator(KeyStroke.getKeyStroke(
                KeyEvent.VK_T, ActionEvent.ALT_MASK));
		gTopTen.addActionListener(this);
		gameMenu.addSeparator();
		
		gExit = new JMenuItem("Exit");
		gExit.setMnemonic(KeyEvent.VK_X);
		gExit.setAccelerator(KeyStroke.getKeyStroke(
                KeyEvent.VK_X, ActionEvent.ALT_MASK));
		gExit.addActionListener(this);
		gameMenu.add(gExit);
		
		hMenu = new JMenu("Help");
		topMenu.add(hMenu);
		
		hHelp = new JMenuItem("Help");
		hHelp.setMnemonic(KeyEvent.VK_H);
		hHelp.setAccelerator(KeyStroke.getKeyStroke(
                KeyEvent.VK_H, ActionEvent.ALT_MASK));
		hHelp.addActionListener(this);
		hMenu.add(hHelp);
		hMenu.addSeparator();
		
		hAbout = new JMenuItem("About");
		hAbout.setMnemonic(KeyEvent.VK_A);
		hAbout.setAccelerator(KeyStroke.getKeyStroke(
                KeyEvent.VK_A, ActionEvent.ALT_MASK));
		hAbout.addActionListener(this);
		hMenu.add(hAbout);
		
		
		
		
		
		
		
		
		
		
		
		
		
		JPanel mboard = new JPanel(new GridLayout(10,10));
		
		JPanel top = new JPanel();
		
		
		
		
		JPanel container = new JPanel();
		container.setLayout(new BoxLayout(container, BoxLayout.Y_AXIS));
		
		
		
		//boardContainer=getContentPane();
		
		//boardContainer.add(top);
		JLabel time = new JLabel("Time");
		
		top.add(time);
		
		
		
		
		//boardContainer.add(mboard);
		
		
		
		
		
		
		
	
		
		
		for(int i=0; i<100; i++){
			mineButtons[i] = new button();
			mboard.add(mineButtons[i]);
			mineButtons[i].setPos(i);
			mineButtons[i].addMouseListener(new buttonListener());
			mineButtons[i].addActionListener(new buttonListener());
			
		}
		
		container.add(top);
		
		container.add(mboard);
		
		add(container);
		
		
		
		
		
		
		
		
		
		
		
		
		
		setVisible(true);
		
		
	
	}


	
	public void actionPerformed(ActionEvent e) {
		
		if(e.getSource() == gReset){
			System.out.println("Reset Pressed");
		}
		
		else if(e.getSource() == gTopTen){
			System.out.println("Top Ten");
		}
		else if(e.getSource() == gExit){
			System.out.println("Exit");
			super.setVisible(false);
		}
		else if(e.getSource() == hHelp){
			JPopupMenu pop = new JPopupMenu(); 
			String text = "Help is here!";
			pop.add(text);
			pop.isVisible();
			
		}
		else if(e.getSource() == hAbout){
			System.out.println("About");
		}
		else{
			System.out.println(e);
		}
		
	}
	
	class buttonListener implements ActionListener, MouseListener{
		
		
		public void actionPerformed(ActionEvent e){
			
			button currButton = (button)e.getSource();
			//System.out.println(currButton.getPos());
			
		}

		@Override
		public void mouseClicked(MouseEvent e) {
			// TODO Auto-generated method stub
			
		}

		@Override
		public void mousePressed(MouseEvent e) {
			
			
			if(SwingUtilities.isRightMouseButton(e) || e.isControlDown() ){
				button currButton = (button)e.getSource();
				System.out.println(currButton.getPos());
				
			}
			
			
		}

		@Override
		public void mouseReleased(MouseEvent e) {
			
			
			
		}

		@Override
		public void mouseEntered(MouseEvent e) {
			
			
			
		}

		@Override
		public void mouseExited(MouseEvent e) {
			
			
			
		}
		
	}
	
}